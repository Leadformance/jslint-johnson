#!/usr/bin/env ruby
require 'rubygems'
require File.expand_path("../lib/jslint-johnson", File.dirname(__FILE__))

if ARGV.empty?
  puts "usage: #{File.basename(__FILE__)} FILES"
  exit 1
end

# get a list of all failed files, printing . or * along the way depending on the result
failed_files = JSLintJohnson::Runner.new(ARGV).run do |file, errors|
  # print a * or . depending on if there were errors
  print errors.length > 0 ? "*" : "."

  # flush standard out since print doesn't seem to do so automatically
  STDOUT.flush
end

# print a summary of failed files
if failed_files.any?
  print "\n\nFailures:\n\n"

  failed_files.each do |file, errors|
    print "#{file}:\n"
    errors.each do |error|
      print "   line #{error.line_number} character #{error.character} #{error.reason}\n"
    end
  end
end

# print a numerical summary
error_count = failed_files.values.flatten.length

print "\n" if failed_files.empty?

print "\n#{ARGV.length} files, #{failed_files.length} failures, #{error_count} errors"

# add a newline to be nice to the console
print "\n"

# exit with the status code of the number of errors
exit(error_count)